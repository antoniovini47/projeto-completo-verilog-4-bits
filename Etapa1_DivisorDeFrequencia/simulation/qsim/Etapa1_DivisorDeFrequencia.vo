// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 23.1std.0 Build 991 11/28/2023 SC Lite Edition"

// DATE "03/22/2024 10:09:04"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Etapa1_DivisorDeFrequencia (
	clock,
	clockLento);
input 	clock;
output 	clockLento;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clockLento~output_o ;
wire \clock~input_o ;
wire \Add0~13_sumout ;
wire \LessThan0~0_combout ;
wire \LessThan0~1_combout ;
wire \LessThan0~2_combout ;
wire \LessThan0~3_combout ;
wire \LessThan0~4_combout ;
wire \LessThan0~5_combout ;
wire \LessThan0~6_combout ;
wire \LessThan0~7_combout ;
wire \Add0~14 ;
wire \Add0~17_sumout ;
wire \Add0~18 ;
wire \Add0~9_sumout ;
wire \Add0~10 ;
wire \Add0~5_sumout ;
wire \Add0~6 ;
wire \Add0~33_sumout ;
wire \Add0~34 ;
wire \Add0~29_sumout ;
wire \Add0~30 ;
wire \Add0~25_sumout ;
wire \Add0~26 ;
wire \Add0~21_sumout ;
wire \Add0~22 ;
wire \Add0~53_sumout ;
wire \Add0~54 ;
wire \Add0~49_sumout ;
wire \Add0~50 ;
wire \Add0~45_sumout ;
wire \Add0~46 ;
wire \Add0~41_sumout ;
wire \Add0~42 ;
wire \Add0~37_sumout ;
wire \Add0~38 ;
wire \Add0~65_sumout ;
wire \Add0~66 ;
wire \Add0~85_sumout ;
wire \Add0~86 ;
wire \Add0~81_sumout ;
wire \Add0~82 ;
wire \Add0~77_sumout ;
wire \Add0~78 ;
wire \Add0~73_sumout ;
wire \Add0~74 ;
wire \Add0~69_sumout ;
wire \Add0~70 ;
wire \Add0~61_sumout ;
wire \Add0~62 ;
wire \Add0~125_sumout ;
wire \Add0~126 ;
wire \Add0~121_sumout ;
wire \Add0~122 ;
wire \Add0~117_sumout ;
wire \Add0~118 ;
wire \Add0~113_sumout ;
wire \Add0~114 ;
wire \Add0~109_sumout ;
wire \Add0~110 ;
wire \Add0~57_sumout ;
wire \Add0~58 ;
wire \Add0~105_sumout ;
wire \Add0~106 ;
wire \Add0~101_sumout ;
wire \Add0~102 ;
wire \Add0~97_sumout ;
wire \Add0~98 ;
wire \Add0~93_sumout ;
wire \Add0~94 ;
wire \Add0~89_sumout ;
wire \Add0~90 ;
wire \Add0~1_sumout ;
wire \clockLento~0_combout ;
wire \clockLento~reg0_q ;
wire [31:0] contador;


cyclonev_io_obuf \clockLento~output (
	.i(\clockLento~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\clockLento~output_o ),
	.obar());
// synopsys translate_off
defparam \clockLento~output .bus_hold = "false";
defparam \clockLento~output .open_drain_output = "false";
defparam \clockLento~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \clock~input (
	.i(clock),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clock~input_o ));
// synopsys translate_off
defparam \clock~input .bus_hold = "false";
defparam \clock~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Add0~13 (
// Equation(s):
// \Add0~13_sumout  = SUM(( contador[0] ) + ( VCC ) + ( !VCC ))
// \Add0~14  = CARRY(( contador[0] ) + ( VCC ) + ( !VCC ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[0]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~13_sumout ),
	.cout(\Add0~14 ),
	.shareout());
// synopsys translate_off
defparam \Add0~13 .extended_lut = "off";
defparam \Add0~13 .lut_mask = 64'h00000000000000FF;
defparam \Add0~13 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \LessThan0~0 (
// Equation(s):
// \LessThan0~0_combout  = (contador[7] & (contador[6] & (contador[5] & contador[4])))

	.dataa(!contador[7]),
	.datab(!contador[6]),
	.datac(!contador[5]),
	.datad(!contador[4]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\LessThan0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \LessThan0~0 .extended_lut = "off";
defparam \LessThan0~0 .lut_mask = 64'h0001000100010001;
defparam \LessThan0~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \LessThan0~1 (
// Equation(s):
// \LessThan0~1_combout  = ( \LessThan0~0_combout  & ( (contador[3] & (((contador[0] & contador[1])) # (contador[2]))) ) )

	.dataa(!contador[3]),
	.datab(!contador[2]),
	.datac(!contador[0]),
	.datad(!contador[1]),
	.datae(!\LessThan0~0_combout ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\LessThan0~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \LessThan0~1 .extended_lut = "off";
defparam \LessThan0~1 .lut_mask = 64'h0000111500001115;
defparam \LessThan0~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \LessThan0~2 (
// Equation(s):
// \LessThan0~2_combout  = ( !contador[8] & ( (!contador[12] & (!contador[11] & (!contador[10] & !contador[9]))) ) )

	.dataa(!contador[12]),
	.datab(!contador[11]),
	.datac(!contador[10]),
	.datad(!contador[9]),
	.datae(!contador[8]),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\LessThan0~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \LessThan0~2 .extended_lut = "off";
defparam \LessThan0~2 .lut_mask = 64'h8000000080000000;
defparam \LessThan0~2 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \LessThan0~3 (
// Equation(s):
// \LessThan0~3_combout  = ( !contador[14] & ( (!contador[18] & (!contador[17] & (!contador[16] & !contador[15]))) ) )

	.dataa(!contador[18]),
	.datab(!contador[17]),
	.datac(!contador[16]),
	.datad(!contador[15]),
	.datae(!contador[14]),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\LessThan0~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \LessThan0~3 .extended_lut = "off";
defparam \LessThan0~3 .lut_mask = 64'h8000000080000000;
defparam \LessThan0~3 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \LessThan0~4 (
// Equation(s):
// \LessThan0~4_combout  = ( !contador[26] & ( (!contador[30] & (!contador[29] & (!contador[28] & !contador[27]))) ) )

	.dataa(!contador[30]),
	.datab(!contador[29]),
	.datac(!contador[28]),
	.datad(!contador[27]),
	.datae(!contador[26]),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\LessThan0~4_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \LessThan0~4 .extended_lut = "off";
defparam \LessThan0~4 .lut_mask = 64'h8000000080000000;
defparam \LessThan0~4 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \LessThan0~5 (
// Equation(s):
// \LessThan0~5_combout  = ( !contador[20] & ( (!contador[24] & (!contador[23] & (!contador[22] & !contador[21]))) ) )

	.dataa(!contador[24]),
	.datab(!contador[23]),
	.datac(!contador[22]),
	.datad(!contador[21]),
	.datae(!contador[20]),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\LessThan0~5_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \LessThan0~5 .extended_lut = "off";
defparam \LessThan0~5 .lut_mask = 64'h8000000080000000;
defparam \LessThan0~5 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \LessThan0~6 (
// Equation(s):
// \LessThan0~6_combout  = ( \LessThan0~4_combout  & ( \LessThan0~5_combout  & ( (!contador[25] & (!contador[19] & (!contador[13] & \LessThan0~3_combout ))) ) ) )

	.dataa(!contador[25]),
	.datab(!contador[19]),
	.datac(!contador[13]),
	.datad(!\LessThan0~3_combout ),
	.datae(!\LessThan0~4_combout ),
	.dataf(!\LessThan0~5_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\LessThan0~6_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \LessThan0~6 .extended_lut = "off";
defparam \LessThan0~6 .lut_mask = 64'h0000000000000080;
defparam \LessThan0~6 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \LessThan0~7 (
// Equation(s):
// \LessThan0~7_combout  = (!contador[31] & (((!\LessThan0~2_combout ) # (!\LessThan0~6_combout )) # (\LessThan0~1_combout )))

	.dataa(!contador[31]),
	.datab(!\LessThan0~1_combout ),
	.datac(!\LessThan0~2_combout ),
	.datad(!\LessThan0~6_combout ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\LessThan0~7_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \LessThan0~7 .extended_lut = "off";
defparam \LessThan0~7 .lut_mask = 64'hAAA2AAA2AAA2AAA2;
defparam \LessThan0~7 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[0] (
	.clk(\clock~input_o ),
	.d(\Add0~13_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[0]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[0] .is_wysiwyg = "true";
defparam \contador[0] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~17 (
// Equation(s):
// \Add0~17_sumout  = SUM(( contador[1] ) + ( GND ) + ( \Add0~14  ))
// \Add0~18  = CARRY(( contador[1] ) + ( GND ) + ( \Add0~14  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[1]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~14 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~17_sumout ),
	.cout(\Add0~18 ),
	.shareout());
// synopsys translate_off
defparam \Add0~17 .extended_lut = "off";
defparam \Add0~17 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~17 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[1] (
	.clk(\clock~input_o ),
	.d(\Add0~17_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[1]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[1] .is_wysiwyg = "true";
defparam \contador[1] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~9 (
// Equation(s):
// \Add0~9_sumout  = SUM(( contador[2] ) + ( GND ) + ( \Add0~18  ))
// \Add0~10  = CARRY(( contador[2] ) + ( GND ) + ( \Add0~18  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[2]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~18 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~9_sumout ),
	.cout(\Add0~10 ),
	.shareout());
// synopsys translate_off
defparam \Add0~9 .extended_lut = "off";
defparam \Add0~9 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~9 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[2] (
	.clk(\clock~input_o ),
	.d(\Add0~9_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[2]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[2] .is_wysiwyg = "true";
defparam \contador[2] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~5 (
// Equation(s):
// \Add0~5_sumout  = SUM(( contador[3] ) + ( GND ) + ( \Add0~10  ))
// \Add0~6  = CARRY(( contador[3] ) + ( GND ) + ( \Add0~10  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[3]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~10 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~5_sumout ),
	.cout(\Add0~6 ),
	.shareout());
// synopsys translate_off
defparam \Add0~5 .extended_lut = "off";
defparam \Add0~5 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~5 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[3] (
	.clk(\clock~input_o ),
	.d(\Add0~5_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[3]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[3] .is_wysiwyg = "true";
defparam \contador[3] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~33 (
// Equation(s):
// \Add0~33_sumout  = SUM(( contador[4] ) + ( GND ) + ( \Add0~6  ))
// \Add0~34  = CARRY(( contador[4] ) + ( GND ) + ( \Add0~6  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[4]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~6 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~33_sumout ),
	.cout(\Add0~34 ),
	.shareout());
// synopsys translate_off
defparam \Add0~33 .extended_lut = "off";
defparam \Add0~33 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~33 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[4] (
	.clk(\clock~input_o ),
	.d(\Add0~33_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[4]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[4] .is_wysiwyg = "true";
defparam \contador[4] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~29 (
// Equation(s):
// \Add0~29_sumout  = SUM(( contador[5] ) + ( GND ) + ( \Add0~34  ))
// \Add0~30  = CARRY(( contador[5] ) + ( GND ) + ( \Add0~34  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[5]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~34 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~29_sumout ),
	.cout(\Add0~30 ),
	.shareout());
// synopsys translate_off
defparam \Add0~29 .extended_lut = "off";
defparam \Add0~29 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~29 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[5] (
	.clk(\clock~input_o ),
	.d(\Add0~29_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[5]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[5] .is_wysiwyg = "true";
defparam \contador[5] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~25 (
// Equation(s):
// \Add0~25_sumout  = SUM(( contador[6] ) + ( GND ) + ( \Add0~30  ))
// \Add0~26  = CARRY(( contador[6] ) + ( GND ) + ( \Add0~30  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[6]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~30 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~25_sumout ),
	.cout(\Add0~26 ),
	.shareout());
// synopsys translate_off
defparam \Add0~25 .extended_lut = "off";
defparam \Add0~25 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~25 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[6] (
	.clk(\clock~input_o ),
	.d(\Add0~25_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[6]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[6] .is_wysiwyg = "true";
defparam \contador[6] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~21 (
// Equation(s):
// \Add0~21_sumout  = SUM(( contador[7] ) + ( GND ) + ( \Add0~26  ))
// \Add0~22  = CARRY(( contador[7] ) + ( GND ) + ( \Add0~26  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[7]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~26 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~21_sumout ),
	.cout(\Add0~22 ),
	.shareout());
// synopsys translate_off
defparam \Add0~21 .extended_lut = "off";
defparam \Add0~21 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~21 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[7] (
	.clk(\clock~input_o ),
	.d(\Add0~21_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[7]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[7] .is_wysiwyg = "true";
defparam \contador[7] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~53 (
// Equation(s):
// \Add0~53_sumout  = SUM(( contador[8] ) + ( GND ) + ( \Add0~22  ))
// \Add0~54  = CARRY(( contador[8] ) + ( GND ) + ( \Add0~22  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[8]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~22 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~53_sumout ),
	.cout(\Add0~54 ),
	.shareout());
// synopsys translate_off
defparam \Add0~53 .extended_lut = "off";
defparam \Add0~53 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~53 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[8] (
	.clk(\clock~input_o ),
	.d(\Add0~53_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[8]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[8] .is_wysiwyg = "true";
defparam \contador[8] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~49 (
// Equation(s):
// \Add0~49_sumout  = SUM(( contador[9] ) + ( GND ) + ( \Add0~54  ))
// \Add0~50  = CARRY(( contador[9] ) + ( GND ) + ( \Add0~54  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[9]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~54 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~49_sumout ),
	.cout(\Add0~50 ),
	.shareout());
// synopsys translate_off
defparam \Add0~49 .extended_lut = "off";
defparam \Add0~49 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~49 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[9] (
	.clk(\clock~input_o ),
	.d(\Add0~49_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[9]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[9] .is_wysiwyg = "true";
defparam \contador[9] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~45 (
// Equation(s):
// \Add0~45_sumout  = SUM(( contador[10] ) + ( GND ) + ( \Add0~50  ))
// \Add0~46  = CARRY(( contador[10] ) + ( GND ) + ( \Add0~50  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[10]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~50 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~45_sumout ),
	.cout(\Add0~46 ),
	.shareout());
// synopsys translate_off
defparam \Add0~45 .extended_lut = "off";
defparam \Add0~45 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~45 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[10] (
	.clk(\clock~input_o ),
	.d(\Add0~45_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[10]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[10] .is_wysiwyg = "true";
defparam \contador[10] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~41 (
// Equation(s):
// \Add0~41_sumout  = SUM(( contador[11] ) + ( GND ) + ( \Add0~46  ))
// \Add0~42  = CARRY(( contador[11] ) + ( GND ) + ( \Add0~46  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[11]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~46 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~41_sumout ),
	.cout(\Add0~42 ),
	.shareout());
// synopsys translate_off
defparam \Add0~41 .extended_lut = "off";
defparam \Add0~41 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~41 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[11] (
	.clk(\clock~input_o ),
	.d(\Add0~41_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[11]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[11] .is_wysiwyg = "true";
defparam \contador[11] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~37 (
// Equation(s):
// \Add0~37_sumout  = SUM(( contador[12] ) + ( GND ) + ( \Add0~42  ))
// \Add0~38  = CARRY(( contador[12] ) + ( GND ) + ( \Add0~42  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[12]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~42 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~37_sumout ),
	.cout(\Add0~38 ),
	.shareout());
// synopsys translate_off
defparam \Add0~37 .extended_lut = "off";
defparam \Add0~37 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~37 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[12] (
	.clk(\clock~input_o ),
	.d(\Add0~37_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[12]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[12] .is_wysiwyg = "true";
defparam \contador[12] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~65 (
// Equation(s):
// \Add0~65_sumout  = SUM(( contador[13] ) + ( GND ) + ( \Add0~38  ))
// \Add0~66  = CARRY(( contador[13] ) + ( GND ) + ( \Add0~38  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[13]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~38 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~65_sumout ),
	.cout(\Add0~66 ),
	.shareout());
// synopsys translate_off
defparam \Add0~65 .extended_lut = "off";
defparam \Add0~65 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~65 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[13] (
	.clk(\clock~input_o ),
	.d(\Add0~65_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[13]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[13] .is_wysiwyg = "true";
defparam \contador[13] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~85 (
// Equation(s):
// \Add0~85_sumout  = SUM(( contador[14] ) + ( GND ) + ( \Add0~66  ))
// \Add0~86  = CARRY(( contador[14] ) + ( GND ) + ( \Add0~66  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[14]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~66 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~85_sumout ),
	.cout(\Add0~86 ),
	.shareout());
// synopsys translate_off
defparam \Add0~85 .extended_lut = "off";
defparam \Add0~85 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~85 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[14] (
	.clk(\clock~input_o ),
	.d(\Add0~85_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[14]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[14] .is_wysiwyg = "true";
defparam \contador[14] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~81 (
// Equation(s):
// \Add0~81_sumout  = SUM(( contador[15] ) + ( GND ) + ( \Add0~86  ))
// \Add0~82  = CARRY(( contador[15] ) + ( GND ) + ( \Add0~86  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[15]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~86 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~81_sumout ),
	.cout(\Add0~82 ),
	.shareout());
// synopsys translate_off
defparam \Add0~81 .extended_lut = "off";
defparam \Add0~81 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~81 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[15] (
	.clk(\clock~input_o ),
	.d(\Add0~81_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[15]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[15] .is_wysiwyg = "true";
defparam \contador[15] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~77 (
// Equation(s):
// \Add0~77_sumout  = SUM(( contador[16] ) + ( GND ) + ( \Add0~82  ))
// \Add0~78  = CARRY(( contador[16] ) + ( GND ) + ( \Add0~82  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[16]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~82 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~77_sumout ),
	.cout(\Add0~78 ),
	.shareout());
// synopsys translate_off
defparam \Add0~77 .extended_lut = "off";
defparam \Add0~77 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~77 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[16] (
	.clk(\clock~input_o ),
	.d(\Add0~77_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[16]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[16] .is_wysiwyg = "true";
defparam \contador[16] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~73 (
// Equation(s):
// \Add0~73_sumout  = SUM(( contador[17] ) + ( GND ) + ( \Add0~78  ))
// \Add0~74  = CARRY(( contador[17] ) + ( GND ) + ( \Add0~78  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[17]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~78 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~73_sumout ),
	.cout(\Add0~74 ),
	.shareout());
// synopsys translate_off
defparam \Add0~73 .extended_lut = "off";
defparam \Add0~73 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~73 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[17] (
	.clk(\clock~input_o ),
	.d(\Add0~73_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[17]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[17] .is_wysiwyg = "true";
defparam \contador[17] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~69 (
// Equation(s):
// \Add0~69_sumout  = SUM(( contador[18] ) + ( GND ) + ( \Add0~74  ))
// \Add0~70  = CARRY(( contador[18] ) + ( GND ) + ( \Add0~74  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[18]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~74 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~69_sumout ),
	.cout(\Add0~70 ),
	.shareout());
// synopsys translate_off
defparam \Add0~69 .extended_lut = "off";
defparam \Add0~69 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~69 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[18] (
	.clk(\clock~input_o ),
	.d(\Add0~69_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[18]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[18] .is_wysiwyg = "true";
defparam \contador[18] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~61 (
// Equation(s):
// \Add0~61_sumout  = SUM(( contador[19] ) + ( GND ) + ( \Add0~70  ))
// \Add0~62  = CARRY(( contador[19] ) + ( GND ) + ( \Add0~70  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[19]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~70 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~61_sumout ),
	.cout(\Add0~62 ),
	.shareout());
// synopsys translate_off
defparam \Add0~61 .extended_lut = "off";
defparam \Add0~61 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~61 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[19] (
	.clk(\clock~input_o ),
	.d(\Add0~61_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[19]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[19] .is_wysiwyg = "true";
defparam \contador[19] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~125 (
// Equation(s):
// \Add0~125_sumout  = SUM(( contador[20] ) + ( GND ) + ( \Add0~62  ))
// \Add0~126  = CARRY(( contador[20] ) + ( GND ) + ( \Add0~62  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[20]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~62 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~125_sumout ),
	.cout(\Add0~126 ),
	.shareout());
// synopsys translate_off
defparam \Add0~125 .extended_lut = "off";
defparam \Add0~125 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~125 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[20] (
	.clk(\clock~input_o ),
	.d(\Add0~125_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[20]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[20] .is_wysiwyg = "true";
defparam \contador[20] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~121 (
// Equation(s):
// \Add0~121_sumout  = SUM(( contador[21] ) + ( GND ) + ( \Add0~126  ))
// \Add0~122  = CARRY(( contador[21] ) + ( GND ) + ( \Add0~126  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[21]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~126 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~121_sumout ),
	.cout(\Add0~122 ),
	.shareout());
// synopsys translate_off
defparam \Add0~121 .extended_lut = "off";
defparam \Add0~121 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~121 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[21] (
	.clk(\clock~input_o ),
	.d(\Add0~121_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[21]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[21] .is_wysiwyg = "true";
defparam \contador[21] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~117 (
// Equation(s):
// \Add0~117_sumout  = SUM(( contador[22] ) + ( GND ) + ( \Add0~122  ))
// \Add0~118  = CARRY(( contador[22] ) + ( GND ) + ( \Add0~122  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[22]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~122 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~117_sumout ),
	.cout(\Add0~118 ),
	.shareout());
// synopsys translate_off
defparam \Add0~117 .extended_lut = "off";
defparam \Add0~117 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~117 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[22] (
	.clk(\clock~input_o ),
	.d(\Add0~117_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[22]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[22] .is_wysiwyg = "true";
defparam \contador[22] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~113 (
// Equation(s):
// \Add0~113_sumout  = SUM(( contador[23] ) + ( GND ) + ( \Add0~118  ))
// \Add0~114  = CARRY(( contador[23] ) + ( GND ) + ( \Add0~118  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[23]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~118 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~113_sumout ),
	.cout(\Add0~114 ),
	.shareout());
// synopsys translate_off
defparam \Add0~113 .extended_lut = "off";
defparam \Add0~113 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~113 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[23] (
	.clk(\clock~input_o ),
	.d(\Add0~113_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[23]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[23] .is_wysiwyg = "true";
defparam \contador[23] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~109 (
// Equation(s):
// \Add0~109_sumout  = SUM(( contador[24] ) + ( GND ) + ( \Add0~114  ))
// \Add0~110  = CARRY(( contador[24] ) + ( GND ) + ( \Add0~114  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[24]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~114 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~109_sumout ),
	.cout(\Add0~110 ),
	.shareout());
// synopsys translate_off
defparam \Add0~109 .extended_lut = "off";
defparam \Add0~109 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~109 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[24] (
	.clk(\clock~input_o ),
	.d(\Add0~109_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[24]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[24] .is_wysiwyg = "true";
defparam \contador[24] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~57 (
// Equation(s):
// \Add0~57_sumout  = SUM(( contador[25] ) + ( GND ) + ( \Add0~110  ))
// \Add0~58  = CARRY(( contador[25] ) + ( GND ) + ( \Add0~110  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[25]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~110 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~57_sumout ),
	.cout(\Add0~58 ),
	.shareout());
// synopsys translate_off
defparam \Add0~57 .extended_lut = "off";
defparam \Add0~57 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~57 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[25] (
	.clk(\clock~input_o ),
	.d(\Add0~57_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[25]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[25] .is_wysiwyg = "true";
defparam \contador[25] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~105 (
// Equation(s):
// \Add0~105_sumout  = SUM(( contador[26] ) + ( GND ) + ( \Add0~58  ))
// \Add0~106  = CARRY(( contador[26] ) + ( GND ) + ( \Add0~58  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[26]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~58 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~105_sumout ),
	.cout(\Add0~106 ),
	.shareout());
// synopsys translate_off
defparam \Add0~105 .extended_lut = "off";
defparam \Add0~105 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~105 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[26] (
	.clk(\clock~input_o ),
	.d(\Add0~105_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[26]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[26] .is_wysiwyg = "true";
defparam \contador[26] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~101 (
// Equation(s):
// \Add0~101_sumout  = SUM(( contador[27] ) + ( GND ) + ( \Add0~106  ))
// \Add0~102  = CARRY(( contador[27] ) + ( GND ) + ( \Add0~106  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[27]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~106 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~101_sumout ),
	.cout(\Add0~102 ),
	.shareout());
// synopsys translate_off
defparam \Add0~101 .extended_lut = "off";
defparam \Add0~101 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~101 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[27] (
	.clk(\clock~input_o ),
	.d(\Add0~101_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[27]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[27] .is_wysiwyg = "true";
defparam \contador[27] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~97 (
// Equation(s):
// \Add0~97_sumout  = SUM(( contador[28] ) + ( GND ) + ( \Add0~102  ))
// \Add0~98  = CARRY(( contador[28] ) + ( GND ) + ( \Add0~102  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[28]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~102 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~97_sumout ),
	.cout(\Add0~98 ),
	.shareout());
// synopsys translate_off
defparam \Add0~97 .extended_lut = "off";
defparam \Add0~97 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~97 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[28] (
	.clk(\clock~input_o ),
	.d(\Add0~97_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[28]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[28] .is_wysiwyg = "true";
defparam \contador[28] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~93 (
// Equation(s):
// \Add0~93_sumout  = SUM(( contador[29] ) + ( GND ) + ( \Add0~98  ))
// \Add0~94  = CARRY(( contador[29] ) + ( GND ) + ( \Add0~98  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[29]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~98 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~93_sumout ),
	.cout(\Add0~94 ),
	.shareout());
// synopsys translate_off
defparam \Add0~93 .extended_lut = "off";
defparam \Add0~93 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~93 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[29] (
	.clk(\clock~input_o ),
	.d(\Add0~93_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[29]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[29] .is_wysiwyg = "true";
defparam \contador[29] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~89 (
// Equation(s):
// \Add0~89_sumout  = SUM(( contador[30] ) + ( GND ) + ( \Add0~94  ))
// \Add0~90  = CARRY(( contador[30] ) + ( GND ) + ( \Add0~94  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[30]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~94 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~89_sumout ),
	.cout(\Add0~90 ),
	.shareout());
// synopsys translate_off
defparam \Add0~89 .extended_lut = "off";
defparam \Add0~89 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~89 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[30] (
	.clk(\clock~input_o ),
	.d(\Add0~89_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[30]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[30] .is_wysiwyg = "true";
defparam \contador[30] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~1 (
// Equation(s):
// \Add0~1_sumout  = SUM(( contador[31] ) + ( GND ) + ( \Add0~90  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!contador[31]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~90 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~1_sumout ),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Add0~1 .extended_lut = "off";
defparam \Add0~1 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~1 .shared_arith = "off";
// synopsys translate_on

dffeas \contador[31] (
	.clk(\clock~input_o ),
	.d(\Add0~1_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\LessThan0~7_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contador[31]),
	.prn(vcc));
// synopsys translate_off
defparam \contador[31] .is_wysiwyg = "true";
defparam \contador[31] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \clockLento~0 (
// Equation(s):
// \clockLento~0_combout  = ( \LessThan0~6_combout  & ( !\clockLento~reg0_q  $ ((((!\LessThan0~1_combout  & \LessThan0~2_combout )) # (contador[31]))) ) ) # ( !\LessThan0~6_combout  & ( !\clockLento~reg0_q  $ (contador[31]) ) )

	.dataa(!\clockLento~reg0_q ),
	.datab(!contador[31]),
	.datac(!\LessThan0~1_combout ),
	.datad(!\LessThan0~2_combout ),
	.datae(!\LessThan0~6_combout ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\clockLento~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \clockLento~0 .extended_lut = "off";
defparam \clockLento~0 .lut_mask = 64'h9999995999999959;
defparam \clockLento~0 .shared_arith = "off";
// synopsys translate_on

dffeas \clockLento~reg0 (
	.clk(\clock~input_o ),
	.d(\clockLento~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clockLento~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \clockLento~reg0 .is_wysiwyg = "true";
defparam \clockLento~reg0 .power_up = "low";
// synopsys translate_on

assign clockLento = \clockLento~output_o ;

endmodule
